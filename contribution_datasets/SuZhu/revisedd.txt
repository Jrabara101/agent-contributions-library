{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bs4 import BeautifulSoup as bs\n",
    "import requests\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "web = 'https://en.wikipedia.org/wiki/Su_Zhu_(businessperson)'\n",
    "response = requests.get(web).text\n",
    "soup = bs(response,'lxml')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "blocks = soup.find_all('p')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "contents = []\n",
    "\n",
    "for content in blocks:\n",
    "    contents.append(content.text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "joined_contents = ' '.join(contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "sentence_endings = [\".\", \"!\", \"?\"]\n",
    "sentences = []\n",
    "\n",
    "start = 0\n",
    "for i, char in enumerate(joined_contents):\n",
    "    if char in sentence_endings:\n",
    "        # Include the punctuation mark with the sentence\n",
    "        sentences.append(joined_contents[start:i+1].strip())\n",
    "        start = i + 1  # Move past the punctuation mark\n",
    "\n",
    "#Group the sentences into chunks of 2\n",
    "chunks = [\" \".join(sentences[i:i+2]) for i in range(0, len(sentences), 2)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "cz_keywords = [\n",
    "    \"Early life and education\", \n",
    "    \"Career\", \n",
    "    \"Three Arrows Capital\", \n",
    "    \"Liquidation\", \n",
    "    \"OPNX\", \n",
    "    \"Arrest and imprisonment\", \n",
    "]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to find keywords in a sentence\n",
    "def find_keywords(sentence, keywords):\n",
    "    return [keyword for keyword in keywords if keyword.lower() in sentence.lower()]\n",
    "\n",
    "# Function to replace empty keyword lists with 'other'\n",
    "def process_keywords(keywords):\n",
    "    return ', '.join(keywords) if keywords else \"other\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = {'contents':[],'keywords':[]}\n",
    "\n",
    "# Process each sentence\n",
    "for sentence in chunks:\n",
    "    found_keywords = find_keywords(sentence, cz_keywords)\n",
    "    data['contents'].append(sentence)\n",
    "    data['keywords'].append(process_keywords(found_keywords))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>contents</th>\n",
       "      <th>keywords</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Su Zhu (born April 1987)[1] is a Singaporean e...</td>\n",
       "      <td>Three Arrows Capital, OPNX</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[3]\\n Zhu was born in China and moved to the U...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[5]\\n Zhu moved to Tokyo to trade derivatives ...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>In 2012 Zhu and Davies founded Three Arrows Ca...</td>\n",
       "      <td>Three Arrows Capital</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[5] According to Davies in an interview on the...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>[5]\\n According to New York Magazine, in its e...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>[5]\\n At its peak in March 2022, 3AC managed a...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>[4]\\n On June 16, 2022 The Financial Times rep...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>[8][9] The same day, a court in the British Vi...</td>\n",
       "      <td>Liquidation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>[11] The Monetary Authority of Singapore banne...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>[14][better source needed]\\n In June 2023 3AC ...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>[15]\\n According to The New York Times, during...</td>\n",
       "      <td>Liquidation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>It’s home to ducks, chickens and numerous type...</td>\n",
       "      <td>OPNX</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>[16]\\n In late September 2023 Zhu was arrested...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>[4] Zhu was ultimately imprisoned for three mo...</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             contents  \\\n",
       "0   Su Zhu (born April 1987)[1] is a Singaporean e...   \n",
       "1   [3]\\n Zhu was born in China and moved to the U...   \n",
       "2   [5]\\n Zhu moved to Tokyo to trade derivatives ...   \n",
       "3   In 2012 Zhu and Davies founded Three Arrows Ca...   \n",
       "4   [5] According to Davies in an interview on the...   \n",
       "5   [5]\\n According to New York Magazine, in its e...   \n",
       "6   [5]\\n At its peak in March 2022, 3AC managed a...   \n",
       "7   [4]\\n On June 16, 2022 The Financial Times rep...   \n",
       "8   [8][9] The same day, a court in the British Vi...   \n",
       "9   [11] The Monetary Authority of Singapore banne...   \n",
       "10  [14][better source needed]\\n In June 2023 3AC ...   \n",
       "11  [15]\\n According to The New York Times, during...   \n",
       "12  It’s home to ducks, chickens and numerous type...   \n",
       "13  [16]\\n In late September 2023 Zhu was arrested...   \n",
       "14  [4] Zhu was ultimately imprisoned for three mo...   \n",
       "\n",
       "                      keywords  \n",
       "0   Three Arrows Capital, OPNX  \n",
       "1                        other  \n",
       "2                        other  \n",
       "3         Three Arrows Capital  \n",
       "4                        other  \n",
       "5                        other  \n",
       "6                        other  \n",
       "7                        other  \n",
       "8                  Liquidation  \n",
       "9                        other  \n",
       "10                       other  \n",
       "11                 Liquidation  \n",
       "12                        OPNX  \n",
       "13                       other  \n",
       "14                       other  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# save to txt \n",
    "df.to_csv('cz1.txt',index=None, sep='\\t')\n",
    "\n",
    "#create branch and make a pull request"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
